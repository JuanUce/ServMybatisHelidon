
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
   // id 'java'
   // id 'application'
     id 'com.github.johnrengelman.shadow' version '6.0.0'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

ext{

helidonversion = '2.2.1'

}

dependencies {
  
    
    implementation platform("io.helidon:helidon-dependencies:${project.helidonversion}")  
    implementation 'io.helidon.microprofile.server:helidon-microprofile-server'
    
    
    //conexión Postgres
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    
     compile group: 'org.mybatis', name: 'mybatis', version: '3.5.6'
     compile group: 'org.mybatis', name: 'mybatis-cdi', version: '1.1.1'
     
     compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.5'
     
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.31'
    compile group: 'jakarta.transaction', name: 'jakarta.transaction-api', version: '1.3.3'
    
}

//application{
 //mainName ='com.programacion.Principal'
// mainClassName ='com.programacion.Principal'
//}

task copyLibs(type: Copy){
  group 'build'
  from configurations.runtimeClasspath
  into 'build/libs/lib'
}

jar { 
    manifest {
    attributes  "Main-Class": "io.helidon.microprofile.server.Main"
  }
}

shadowJar{
mergeServiceFiles()
}

task stage(dependsOn: ['build', 'clean','shadowJar'])
build.mustRunAfter clean
